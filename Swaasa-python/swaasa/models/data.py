# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class Data(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        Data - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'age': 'str',
            'cough_pattern': 'str',
            'cough_severity_score': 'int',
            'dry_cough_count': 'int',
            'gender': 'str',
            'patient_id': 'str',
            'record_duration': 'str',
            'risk': 'str',
            'severity': 'str',
            'status': 'str',
            'symptoms': 'Symptoms',
            'timestamp': 'datetime',
            'wet_cough_count': 'int'
        }

        self.attribute_map = {
            'age': 'age',
            'cough_pattern': 'cough_pattern',
            'cough_severity_score': 'cough_severity_score',
            'dry_cough_count': 'dry_cough_count',
            'gender': 'gender',
            'patient_id': 'patientId',
            'record_duration': 'record_duration',
            'risk': 'risk',
            'severity': 'severity',
            'status': 'status',
            'symptoms': 'symptoms',
            'timestamp': 'timestamp',
            'wet_cough_count': 'wet_cough_count'
        }

        self._age = None
        self._cough_pattern = None
        self._cough_severity_score = None
        self._dry_cough_count = None
        self._gender = None
        self._patient_id = None
        self._record_duration = None
        self._risk = None
        self._severity = None
        self._status = None
        self._symptoms = None
        self._timestamp = None
        self._wet_cough_count = None

    @property
    def age(self):
        """
        Gets the age of this Data.


        :return: The age of this Data.
        :rtype: str
        """
        return self._age

    @age.setter
    def age(self, age):
        """
        Sets the age of this Data.


        :param age: The age of this Data.
        :type: str
        """
        self._age = age

    @property
    def cough_pattern(self):
        """
        Gets the cough_pattern of this Data.


        :return: The cough_pattern of this Data.
        :rtype: str
        """
        return self._cough_pattern

    @cough_pattern.setter
    def cough_pattern(self, cough_pattern):
        """
        Sets the cough_pattern of this Data.


        :param cough_pattern: The cough_pattern of this Data.
        :type: str
        """
        self._cough_pattern = cough_pattern

    @property
    def cough_severity_score(self):
        """
        Gets the cough_severity_score of this Data.


        :return: The cough_severity_score of this Data.
        :rtype: int
        """
        return self._cough_severity_score

    @cough_severity_score.setter
    def cough_severity_score(self, cough_severity_score):
        """
        Sets the cough_severity_score of this Data.


        :param cough_severity_score: The cough_severity_score of this Data.
        :type: int
        """
        self._cough_severity_score = cough_severity_score

    @property
    def dry_cough_count(self):
        """
        Gets the dry_cough_count of this Data.


        :return: The dry_cough_count of this Data.
        :rtype: int
        """
        return self._dry_cough_count

    @dry_cough_count.setter
    def dry_cough_count(self, dry_cough_count):
        """
        Sets the dry_cough_count of this Data.


        :param dry_cough_count: The dry_cough_count of this Data.
        :type: int
        """
        self._dry_cough_count = dry_cough_count

    @property
    def gender(self):
        """
        Gets the gender of this Data.


        :return: The gender of this Data.
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """
        Sets the gender of this Data.


        :param gender: The gender of this Data.
        :type: str
        """
        self._gender = gender

    @property
    def patient_id(self):
        """
        Gets the patient_id of this Data.


        :return: The patient_id of this Data.
        :rtype: str
        """
        return self._patient_id

    @patient_id.setter
    def patient_id(self, patient_id):
        """
        Sets the patient_id of this Data.


        :param patient_id: The patient_id of this Data.
        :type: str
        """
        self._patient_id = patient_id

    @property
    def record_duration(self):
        """
        Gets the record_duration of this Data.


        :return: The record_duration of this Data.
        :rtype: str
        """
        return self._record_duration

    @record_duration.setter
    def record_duration(self, record_duration):
        """
        Sets the record_duration of this Data.


        :param record_duration: The record_duration of this Data.
        :type: str
        """
        self._record_duration = record_duration

    @property
    def risk(self):
        """
        Gets the risk of this Data.


        :return: The risk of this Data.
        :rtype: str
        """
        return self._risk

    @risk.setter
    def risk(self, risk):
        """
        Sets the risk of this Data.


        :param risk: The risk of this Data.
        :type: str
        """
        self._risk = risk

    @property
    def severity(self):
        """
        Gets the severity of this Data.


        :return: The severity of this Data.
        :rtype: str
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """
        Sets the severity of this Data.


        :param severity: The severity of this Data.
        :type: str
        """
        self._severity = severity

    @property
    def status(self):
        """
        Gets the status of this Data.


        :return: The status of this Data.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """
        Sets the status of this Data.


        :param status: The status of this Data.
        :type: str
        """
        self._status = status

    @property
    def symptoms(self):
        """
        Gets the symptoms of this Data.


        :return: The symptoms of this Data.
        :rtype: Symptoms
        """
        return self._symptoms

    @symptoms.setter
    def symptoms(self, symptoms):
        """
        Sets the symptoms of this Data.


        :param symptoms: The symptoms of this Data.
        :type: Symptoms
        """
        self._symptoms = symptoms

    @property
    def timestamp(self):
        """
        Gets the timestamp of this Data.


        :return: The timestamp of this Data.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """
        Sets the timestamp of this Data.


        :param timestamp: The timestamp of this Data.
        :type: datetime
        """
        self._timestamp = timestamp

    @property
    def wet_cough_count(self):
        """
        Gets the wet_cough_count of this Data.


        :return: The wet_cough_count of this Data.
        :rtype: int
        """
        return self._wet_cough_count

    @wet_cough_count.setter
    def wet_cough_count(self, wet_cough_count):
        """
        Sets the wet_cough_count of this Data.


        :param wet_cough_count: The wet_cough_count of this Data.
        :type: int
        """
        self._wet_cough_count = wet_cough_count

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other): 
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """ 
        Returns true if both objects are not equal
        """
        return not self == other

